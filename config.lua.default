-- DEFAULT copy to config.lua and modify to your liking
-- Has to maintain LUA Table syntax (its a bit annoying TBH)
-- If you are reading this you probably know what you do...

any_color.config = {
  --[[ when true EVERYTHING that has param2 free will be colorable
       unless it is on the blacklist.
       This is "the nuclear option"
  ]]
  colorize_all = true,
  keep_color = false,  --If on items in inventory retain their color and do not stack with other colors

  -- Default palettes to use when overriding
  default_palette_256 = 'any_color_mode13_bright_1_white.png',
  default_palette_32 = 'any_color_mode13_bright_16x2.png',
  default_palette_8 = 'any_color_mode13_bright_8x1.png',

  --[[ overrides allow specifing patterns of nodes that shall be forced
       to be colorable with a default palette. The items can be either the nodename
       as a string, or a table of {nodename, override_table} allowing to pass
       specific overrides to minetest.override_item(nodename, override_table)
       for example: {'default:stone', {palette="any_color_8_bit_palette.png"} will
       set a different palette for stone. You can use this to apply you own
       textures that are easier to color, or texture overlays to exclude regions
       from coloring!

       Patterns as used by LUA's string.find() are permitted.
       "Magic" characters ( ) . % + - * ? [ ^ $ must be escaped by %

  ]]
  overrides = {
    "default:stone*",
    --{'default:stone', {palette="any_color_8_bit_palette.png"}},
  },

  --[[ Allows to exclude nodes from coloring
       Patterns as used by LUA's string.find() are permitted.
       "Magic" characters ( ) . % + - * ? [ ^ $ must be escaped by %
  ]]
  blacklist = {
  'default:sign_*',
  'basic_signs:*',
  'signs*',
  },


} -- end of config
